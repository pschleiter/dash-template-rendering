[project]
name = "dash-template-rendering"
version = "0.0.1b7"
authors = [{ name = "Patrick Schleiter", email = "git.pschleiter@gmail.com" }]
description = "Dash Python extention for rendering Jinja2 templates."
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: Dash",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
readme = "README.md"
dependencies = [
    "beautifulsoup4>=4.13.4",
    "dash>=3.1.1",
    "flask>=3.1.1",
    "jinja2>=3.1.6",
    "markupsafe>=3.0.2",
    "plotly>=6.2.0",
]
[project.urls]
"Source Code" = "https://github.com/pschleiter/dash-template-rendering"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
test = [
    "coverage>=7.9.2",
    "hypothesis>=6.136.1",
    "pytest>=8.4.1",
    "pytest-sugar>=1.0.0",
]

[tool.poe]
executor.type = "uv"

[tool.poe.tasks]
test.cmd = 'uv run --group test pytest tests'
test.help = 'Run pytest test suite'

_coverage_run.cmd = 'uv run --group test coverage run -m pytest tests'
_coverage_report.cmd = 'uv run --group test coverage report -m'
coverage.sequence = ["_coverage_run", "_coverage_report"]
coverage.help = 'Create coverage report for pytest test suite'
cov.ref = 'coverage'
cov.help = 'Create coverage report for pytest test suite (alias for coverage)'

_ruff = 'uvx ruff==0.9.1'
fmt.ref = '_ruff format'
fmt.help = 'Run ruff as formatter for the project'
lint.ref = '_ruff check'
lint.help = 'Run ruff as linter for the project'
type.cmd = 'uvx ty check'
type.help = 'Run ty as type checker for the project'
ty.ref ='type'
ty.help = 'Run ty as type checker for the project (alias for type)'

[tool.ruff]
target-version = "py312"
line-length = 88
indent-width = 4
include = [
  "src/**/*.py",
  "src/**/*.pyi",
  "tests/**/*.py",
  "tests/**/*.pyi"
]

[tool.ruff.format]
preview = true
quote-style = "single"

[tool.ruff.lint]
preview = true
unfixable = [
  "F401",
]

[tool.ruff.lint.isort]
known-first-party = ["dash-template-rendering"]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "TID252"]
